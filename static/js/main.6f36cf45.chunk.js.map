{"version":3,"sources":["components/PageNavLink.tsx","App.tsx","components/Tabs.tsx","pages/TabsPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","tabs","id","title","content","App","Tabs","selectedTabId","currTab","find","tab","map","TabsPage","tabId","useParams","ReactDOM","render","path","element","index","replace","document","getElementById"],"mappings":"gPAQaA,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC1C,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,SAACC,GAAD,OAAcC,IACvB,cACA,CAAE,YAAaD,KAJnB,SAOGF,KCVQI,EAAO,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,OACE,qCAEE,qBACEP,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,OAAOC,KAAK,gBAKlC,qBAAKC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,YCrBGQ,EAAwB,SAAC,GAG/B,IAFLL,EAEI,EAFJA,KACAM,EACI,EADJA,cAEMC,EAAUP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,KAAOK,MAAkB,KAE9D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKT,UAAU,gBAAf,SACE,6BACGG,EAAKU,KAAI,SAAAD,GAAG,OACX,oBACEZ,UAAWE,IAAW,GAAI,CACxB,YAAaU,EAAIR,MAAJ,OAAWM,QAAX,IAAWA,OAAX,EAAWA,EAASN,MAEnC,UAAQ,MAJV,SAOE,cAAC,IAAD,CACEN,GAAE,gBAAWc,EAAIR,IACjB,UAAQ,UAFV,SAIGQ,EAAIP,SANFO,EAAIR,WAajB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACIU,EAKAA,EAAQJ,QAJR,qBAAKN,UAAU,QAAQ,UAAQ,aAA/B,uCCpCGc,EAAW,WACtB,IAAQC,EAAUC,cAAVD,MAER,OACE,qCACE,oBAAIf,UAAU,QAAd,uBACA,cAAC,EAAD,CACEG,KAAMA,EACNM,cAAeM,QCFvBE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CACEC,OAAK,EACLD,QAAS,oBAAIpB,UAAU,QAAd,yBAEX,cAAC,IAAD,CAAOmB,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUtB,GAAG,IAAIwB,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,OAAOC,QAAU,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAU,cAAC,EAAD,MACpC,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,oBAAIpB,UAAU,QAAd,qCAKjBuB,SAASC,eAAe,W","file":"static/js/main.6f36cf45.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={(isActive) => classNames(\n      'navbar-item',\n      { 'is-active': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { PageNavLink } from './components/PageNavLink';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  return (\n    <>\n      {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" text=\"Home\" />\n            <PageNavLink to=\"tabs\" text=\"Tabs\" />\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string | undefined,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n}) => {\n  const currTab = tabs.find(tab => tab.id === selectedTabId) || null;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames('', {\n                'is-active': tab.id === currTab?.id,\n              })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <Link\n                to={`/tabs/${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {!currTab ? (\n          <div className=\"block\" data-cy=\"TabContent\">\n            Please select a tab\n          </div>\n        ) : (\n          currTab.content\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tabs } from '../components/Tabs';\nimport { tabs } from '../App';\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={tabId}\n      />\n    </>\n\n  );\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { TabsPage } from './pages/TabsPage';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route\n          index\n          element={<h1 className=\"title\">Home page</h1>}\n        />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"tabs\" element={(<TabsPage />)} />\n        <Route path=\"tabs/:tabId\" element={(<TabsPage />)} />\n        <Route\n          path=\"*\"\n          element={<h1 className=\"title\">Page not found</h1>}\n        />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}